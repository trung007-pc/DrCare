@page "/tenants"
@* @attribute [Authorize(AccessClaims.Tenants.Default)] *@
@inject TenantService _tenantService;
@inject Localizer L;
@using Todo.AdminBlazor.Services
@using Todo.Contract.Tenants
@using Todo.Core.Enums
@using Todo.Localziration
@using Variant = Radzen.Variant
@using ButtonType = Radzen.ButtonType
@using AlignItems = Radzen.AlignItems
@using Todo.AdminBlazor.Helper
@using Todo.Contract.Validations
@using Todo.Core.Consts.Permissions

@inherits BaseBlazorPage


<h3>@L["Tenant"]</h3>


<div style="display: flex;justify-content: space-between;align-items: center">
    <div>
        <RadzenBreadCrumb >
            <RadzenBreadCrumbItem Path="/" Icon="home" Style="font-size: 20px"/>
            <RadzenBreadCrumbItem Text="@HeaderTitle" Style="font-weight: 300"/>
        </RadzenBreadCrumb>
    </div>
    <div>
        @if (CanCreate)
        {
            <RadzenButton Text="@L["Create"]" Click="@ShowNewModal" Icon="post_add" Style="margin-bottom: 20px;"/>
        }
    </div>
</div>


<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@Tenants" TItem="TenantDto" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>

        <RadzenDataGridColumn TItem="TenantDto" Property="Name" Filterable="false" Title="Name" Frozen="true" Width="160px" TextAlign="TextAlign.Center"/>
        <RadzenDataGridColumn TItem="TenantDto" Property="StartDate" Title="Start Date" Frozen="true" Width="160px"/>
        <RadzenDataGridColumn TItem="TenantDto" Property="EndDate" Title="End Date" Frozen="true" Width="160px"/>
        <RadzenDataGridColumn TItem="TenantDto" Property="PhoneNumber" Title="Phone Number" Frozen="true" Width="160px"/>
        <RadzenDataGridColumn TItem="TenantDto" Property="IsActive" Title="Active" Frozen="true" Width="160px"/>

        <RadzenDataGridColumn TItem="TenantDto" Title="Action" Property="Id" Sortable="false" Width="160px">
            <Template Context="data">
                <RadzenSplitButton Click="(e) => { OnClick(e, data); }" AlwaysOpenPopup="true" Text="Actions" ButtonStyle="ButtonStyle.Primary">
                    <ChildContent>
                        @if (CanEdit)
                        {
                            <RadzenSplitButtonItem Text="Edit" Value="@FormActions.Edit"/>
                        }
                        @if (CanAuthorize)
                        {
                            <RadzenSplitButtonItem Text="Permission" Value="@FormActions.Claim"/>
                        }
                        @if (CanDelete)
                        {
                            <RadzenSplitButtonItem Text="Delete" Value="@FormActions.Delete"/>
                        }
                    </ChildContent>
                </RadzenSplitButton>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>


<TDModel @ref="NewModal">
    <RadzenAlert AlertStyle="AlertStyle.Info" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
        Creating Tenant
    </RadzenAlert>
    <EditForm Model="NewTenant" OnValidSubmit="async () => { await CreateTenant(); }">
        <FluentValidator TValidator="TenantValidator"/>

        <RadzenStack Orientation="Radzen.Orientation.Vertical" AlignItems="AlignItems.Normal" Wrap="FlexWrap.Wrap">

            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">@L["Name"]</RadzenText>
            <RadzenTextBox Class="w-100" @bind-Value="NewTenant.Name"/>
            <ValidationMessage For="@(() => NewTenant.Name)"/>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">@L["StartDate"]</RadzenText>
            <RadzenDatePicker Class="w-100" @bind-Value="NewTenant.StartDate" DateFormat="dd/MM/yyyy"/>
            <ValidationMessage For="@(() => NewTenant.StartDate)"/>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">@L["EndDate"]</RadzenText>
            <RadzenDatePicker Class="w-100" @bind-Value="NewTenant.EndDate" DateFormat="dd/MM/yyyy"/>
            <ValidationMessage For="@(() => NewTenant.EndDate)"/>
       
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">@L["PhoneNumber"]</RadzenText>
            <RadzenTextBox Class="w-100" @bind-Value="NewTenant.PhoneNumber"/>
            <ValidationMessage For="@(() => NewTenant.PhoneNumber)"/>
                 <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="display: inline">@L["User.IsActive"]</RadzenText>
                        <RadzenSwitch @bind-Value=@NewTenant.IsActive />
                        <ValidationMessage For="@(() => NewTenant.IsActive)"/>
            <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.End">
                <RadzenButton Text="@L["SaveChanges"]" BusyText="Saving ..." Icon="save" ButtonType="ButtonType.Submit" Size="ButtonSize.Large" IsBusy="IsDisable"/>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideEditingModal" Size="ButtonSize.Large" Text="@L["Cancel"]" Disabled="IsDisable"/>
            </RadzenStack>

        </RadzenStack>


    </EditForm>

</TDModel>


<TDModel @ref="EditingModal">
    <RadzenAlert AlertStyle="AlertStyle.Info" ShowIcon="true" Variant="Variant.Flat" Shade="Shade.Lighter">
        Editing Tenant
    </RadzenAlert>
    <EditForm Model="EditingTenant" OnValidSubmit="async () => { await UpdateTenant(); }">
        <FluentValidator TValidator="TenantValidator"/>

        <RadzenStack Orientation="Radzen.Orientation.Vertical" AlignItems="AlignItems.Normal" Wrap="FlexWrap.Wrap">

            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">@L["Name"]</RadzenText>
            <RadzenTextBox Class="w-100" @bind-Value="EditingTenant.Name"/>
            <ValidationMessage For="@(() => EditingTenant.Name)"/>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">@L["StartDate"]</RadzenText>
            <RadzenDatePicker Class="w-100" @bind-Value="EditingTenant.StartDate" DateFormat="dd/MM/yyyy"/>
            <ValidationMessage For="@(() => EditingTenant.StartDate)"/>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">@L["EndDate"]</RadzenText>
            <RadzenDatePicker Class="w-100" @bind-Value="EditingTenant.EndDate" DateFormat="dd/MM/yyyy"/>
            <ValidationMessage For="@(() => EditingTenant.EndDate)"/>

            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="display: inline">@L["User.IsActive"]</RadzenText>
            <RadzenSwitch @bind-Value=@EditingTenant.IsActive />
            <ValidationMessage For="@(() => EditingTenant.IsActive)"/>

            <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.End">
                <RadzenButton Text="@L["SaveChanges"]" BusyText="Saving ..." Icon="save" ButtonType="ButtonType.Submit" Size="ButtonSize.Large" IsBusy="IsDisable"/>
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideEditingModal" Size="ButtonSize.Large" Text="@L["Cancel"]" Disabled="IsDisable"/>
            </RadzenStack>

        </RadzenStack>


    </EditForm>

</TDModel>


<TDModel @ref="ClaimModal" Width="60vw">
    <RadzenTabs TabPosition="TabPosition.Left" RenderMode="TabRenderMode.Client">
        <Tabs>
            <RadzenTabsItem Text="Identity management">

                @foreach (var items in Claims)
                {
                    <h2>@items.Key</h2>
                    foreach (var item in items.Value)
                    {
                        <MudCheckBox @bind-Checked="@(item.IsSelected)" Color="Color.Secondary">@item.Name</MudCheckBox>
                    }
                }


                <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.End">
                    <RadzenButton Text="@L["SaveChanges"]" BusyText="Saving ..." Click="UpdateClaimsToTenant" Icon="save" ButtonType="ButtonType.Submit" Size="ButtonSize.Large" IsBusy="IsDisable"/>
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" Click="@HideEditingModal" Size="ButtonSize.Large" Text="@L["Cancel"]" IsBusy="IsDisable"/>
                </RadzenStack>

            </RadzenTabsItem>
            <RadzenTabsItem Text="Tenant management">
                <h1>2</h1>
            </RadzenTabsItem>

        </Tabs>

    </RadzenTabs>

</TDModel>



<TDModel @ref="DeletingModal" ConfirmMessage="@L["Confirmation.Message"]" Title="@L["Title.Delete"]" ShowTitle="true">

    
</TDModel>